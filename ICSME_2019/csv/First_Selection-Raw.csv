a comprehensive model for code readability
a paradigm for programming style research
A Simpler Model of Software Readability
An Empirical Investigation into Programming Language Syntax
an empirical investigation of the influence of a type of side effects on program comprehension
an experimental investigation of the effect of program structure on program understanding
an investigation of misunderstanding code patterns in c opensource software projects
automatic segmentation of method code into meaningful blocks design and evaluation
automatically assessing code understandability
automatically assessing code understandability reanalyzed combined metrics matter
beacons in computer program comprehension
complexity measures for rulebased programs
"conditional statements, looping constructs, and program comprehension an experiments study"
Dealing with faults in source code: Abbreviated vs. full-word names
descriptive compound identifier names improve source code comprehension
detecting and comparing brain activity in short program comprehension using eeg
Do static type systems improve the maintainability of software systems? An empirical study
does the discipline of preprocessor annotations matter a controlled experiment
effective identifier names for comprehension and memory
effects of variable names on comprehension an empirical study
empirical studies on programming language stimuli
enhancing program comprehension formatting and documenting
how programmers read regular code a controlled experiment using eye tracking
identifier length and limited programmer memory
impacts of coding practices on readability
indentation simply a matter of style or support for program comprehension
learning a metric for code readability
linguistic antipatterns what they are and how developers perceive them
"linking code readability, structure, and comprehension among novices its complicated"
meaningful identifier names the case of singleletter variables
meaningfulness as a factor of program complexity
measuring computer program comprehension
measuring neural efficiency of program comprehension
measuring the difficulty of code comprehension tasks using software metrics
measuring the impact of lexical and structural inconsistencies on developersâ€™ cognitive load during bug localization
on method ordering
on some enduser programming constructs and their understandability
on the effect of code regularity on comprehension
program comprehension investigating the effects of naming style and documentation
program indentation and comprehensibility
program readability procedures versus comments
Recursion vs. iteration: An empirical study of comprehension
replicating novices struggles with coding style
shorter identifier names take longer to comprehend
"syntax, predicates, idioms what really affects code complexity"
the discipline of preprocessorbased annotations does #ifdef tag nt #endif matter
the effect of modularization and comments on program comprehension
the effect of scope delimiters on program comprehension
the effectiveness of source code obfuscation an experimental assessment
the effects of naming style and expertise on program comprehension
the impact of identifier style on effort and comprehension
the initial stage of program comprehension
typographic style is more than cosmetic
understanding misunderstandings in source code